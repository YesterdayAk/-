{"version":3,"file":"944.425dfbe031d712e4190c.js","mappings":"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","sources":["webpack://labor-live/./src/utils/socket.ts","webpack://labor-live/./src/views/Manage/TurnplateManage.vue?5280","webpack://labor-live/./src/views/Manage/TurnplateManage.vue?4340","webpack://labor-live/./src/views/Manage/TurnplateManage.vue?d577"],"sourcesContent":["import { userStore } from \"@/store/user\";\r\nimport { storeToRefs } from \"pinia\";\r\n/**\r\n * @description 封装socket方法\r\n */\r\n\r\nimport { Toast } from \"vant\";\r\n// const Base64 = require('js-base64').Base64\r\nimport { Base64 } from \"js-base64\"\r\n\r\ninterface socket {\r\n    websocket: any\r\n    connectURL: string\r\n    socket_open: boolean\r\n    hearbeat_timer: any\r\n    hearbeat_interval: number\r\n    is_reconnect: boolean\r\n    reconnect_count: number\r\n    reconnect_current: number\r\n    reconnect_number: number\r\n    reconnect_timer: any\r\n    reconnect_interval: number\r\n\r\n    init: (receiveMessage: Function | null) => any\r\n    receive: (message: any) => void\r\n    heartbeat: () => void\r\n    send: (data: any, callback?: any) => void\r\n    close: () => void\r\n    reconnect: () => void\r\n}\r\nconst store = userStore();\r\nconst { liveId, userId } = storeToRefs(store);\r\nconst socket: socket = {\r\n    websocket: null,\r\n    // connectURL: \"wss://websocket.qdszgh.cn:8443/jeecg-boot/liveWebsocket/\" + liveId.value + '/' + userId.value,\r\n    connectURL: \"wss://websocket.qdszgh.cn:8443/jeecg-boot/testLiveWebsocket/\" + liveId.value + '/' + userId.value,\r\n    //开启标识\r\n    socket_open: false,\r\n    //心跳timer\r\n    hearbeat_timer: null,\r\n    //心跳发送频率\r\n    hearbeat_interval: 60000,\r\n    //是否自动重连\r\n    is_reconnect: true,\r\n    //重连次数\r\n    reconnect_count: 3,\r\n    //已发起重连次数\r\n    reconnect_current: 1,\r\n    //网络错误提示此时\r\n    reconnect_number: 0,\r\n    //重连timer\r\n    reconnect_timer: null,\r\n    //重连频率\r\n    reconnect_interval: 5000,\r\n\r\n\r\n    init: (receiveMessage: Function | null) => {\r\n        if (!('WebSocket' in window)) {\r\n            Toast.fail(\"浏览器不支持websocket\");\r\n            return null\r\n        }\r\n        socket.websocket = new WebSocket(socket.connectURL)\r\n        socket.websocket.onmessage = (e: any) => {\r\n            if (receiveMessage) {\r\n                receiveMessage(e)\r\n            }\r\n        }\r\n\r\n        socket.websocket.onclose = (e: any) => {\r\n            clearInterval(socket.hearbeat_interval)\r\n            socket.socket_open = false;\r\n\r\n            //需要重新连接\r\n            if (socket.is_reconnect) {\r\n                socket.reconnect_timer = setTimeout(() => {\r\n                    //超过重连次数\r\n                    if (socket.reconnect_current > socket.reconnect_count) {\r\n                        clearTimeout(socket.reconnect_timer)\r\n                        socket.is_reconnect = false;\r\n                        return\r\n                    }\r\n\r\n\r\n                    //记录重连次数\r\n                    socket.reconnect_current++\r\n                    socket.reconnect()\r\n                }, socket.reconnect_interval)\r\n            }\r\n        }\r\n\r\n        //连接成功\r\n        socket.websocket.onopen = function () {\r\n            socket.socket_open = true\r\n            socket.is_reconnect = true\r\n            //开启心跳\r\n            socket.heartbeat()\r\n        }\r\n\r\n        //连接发生错误\r\n        socket.websocket.onerror = function () { }\r\n    },\r\n\r\n\r\n    send: (data, callback = null) => {\r\n        //开启状态直接发送\r\n        if (socket.websocket.readyState == socket.websocket.OPEN) {\r\n            socket.websocket.send(JSON.stringify(data))\r\n            if (callback) {\r\n                callback()\r\n            }\r\n\r\n            //正在开启状态，则等待1s后调用\r\n        } else {\r\n            clearInterval(socket.hearbeat_timer)\r\n            if (socket.reconnect_number < 1) { }\r\n            socket.reconnect_number++\r\n        }\r\n    },\r\n\r\n\r\n    receive: (message: any) => {\r\n        // let params = Base64.decode(JSON.parse(message.data).data)\r\n        let params = Base64.decode(JSON.parse(message.data))\r\n        params = JSON.parse(params)\r\n        return params\r\n    },\r\n\r\n    heartbeat: () => {\r\n        if (socket.hearbeat_timer) {\r\n            clearInterval(socket.hearbeat_timer)\r\n        }\r\n\r\n        socket.hearbeat_timer = setInterval(() => {\r\n            let data = {\r\n                content: 'ping'\r\n            }\r\n            let sendDara = {\r\n                encryption_type: 'base64',\r\n                data: Base64.encode(JSON.stringify(data))\r\n            }\r\n            socket.send(sendDara)\r\n        }, socket.hearbeat_interval)\r\n    },\r\n\r\n    close: () => {\r\n        clearInterval(socket.hearbeat_interval)\r\n        socket.is_reconnect = false\r\n        socket.websocket.close()\r\n    },\r\n\r\n\r\n    /**\r\n     * 重新连接\r\n     */\r\n\r\n    reconnect: () => {\r\n        if (socket.websocket && !socket.is_reconnect) {\r\n            socket.close()\r\n        }\r\n\r\n        socket.init(null)\r\n    }\r\n}\r\n\r\nexport default socket\r\n\r\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6e58b550\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"content\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { style: {\"height\":\"8px\",\"background\":\"#f5f5f5\"} }, null, -1 /* HOISTED */))\nconst _hoisted_3 = { style: {\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"space-between\"} }\nconst _hoisted_4 = { style: {\"display\":\"flex\"} }\nconst _hoisted_5 = { style: {\"margin-left\":\"12px\"} }\nconst _hoisted_6 = {\n  class: \"fsize14\",\n  style: {\"padding-top\":\"5px\"}\n}\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\" 拼手气福袋 \")\nconst _hoisted_8 = {\n  key: 0,\n  style: {\"color\":\"#999999\"}\n}\nconst _hoisted_9 = {\n  class: \"fsize12 overtext\",\n  style: {\"margin-top\":\"12px\"}\n}\nconst _hoisted_10 = { style: {\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"space-between\"} }\nconst _hoisted_11 = { style: {\"display\":\"flex\"} }\nconst _hoisted_12 = { style: {\"margin-left\":\"12px\"} }\nconst _hoisted_13 = {\n  class: \"fsize14\",\n  style: {\"padding-top\":\"5px\"}\n}\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\" 幸运抽奖 \")\nconst _hoisted_15 = {\n  class: \"fsize12\",\n  style: {\"margin-top\":\"12px\"}\n}\nconst _hoisted_16 = { class: \"overtext\" }\nconst _hoisted_17 = [\"onClick\"]\nconst _hoisted_18 = { style: {\"padding-bottom\":\"23px\",\"text-align\":\"center\",\"padding-left\":\"20px\",\"padding-right\":\"20px\"} }\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"pop-title\" }, \"奖项设置\", -1 /* HOISTED */))\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"pop-content fsize14\",\n  style: {\"display\":\"flex\",\"justify-content\":\"space-around\"}\n}, [\n  /*#__PURE__*/_createElementVNode(\"div\", { style: {\"display\":\"inline-block\",\"padding-right\":\"20px\"} }, \"奖项名称\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { style: {\"display\":\"inline-block\",\"padding-right\":\"20px\"} }, \"奖品数量\"),\n  /*#__PURE__*/_createTextVNode(\" 奖品内容 \")\n], -1 /* HOISTED */))\nconst _hoisted_21 = { class: \"fsize14\" }\nconst _hoisted_22 = { class: \"listfront\" }\nconst _hoisted_23 = { class: \"listfront\" }\nconst _hoisted_24 = { class: \"listfront\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_van_nav_bar = _resolveComponent(\"van-nav-bar\")!\n  const _component_van_count_down = _resolveComponent(\"van-count-down\")!\n  const _component_van_button = _resolveComponent(\"van-button\")!\n  const _component_van_cell = _resolveComponent(\"van-cell\")!\n  const _component_van_list = _resolveComponent(\"van-list\")!\n  const _component_van_pull_refresh = _resolveComponent(\"van-pull-refresh\")!\n  const _component_van_popup = _resolveComponent(\"van-popup\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_van_nav_bar, {\n      class: \"title\",\n      title: \"抽奖管理\",\n      \"left-text\": \"\",\n      \"left-arrow\": \"\",\n      onClickLeft: _ctx.onClickLeft\n    }, null, 8 /* PROPS */, [\"onClickLeft\"]),\n    _createVNode(_component_van_pull_refresh, {\n      modelValue: _ctx.refreshing,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.refreshing) = $event)),\n      onRefresh: _ctx.onRefresh\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_component_van_list, {\n          loading: _ctx.loading,\n          \"onUpdate:loading\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.loading) = $event)),\n          finished: _ctx.finished,\n          \"finished-text\": \"没有更多了\",\n          onLoad: _ctx.onLoad,\n          class: \"pull-box\"\n        }, {\n          default: _withCtx(() => [\n            _hoisted_2,\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.luckyList, (item) => {\n              return (_openBlock(), _createBlock(_component_van_cell, {\n                key: item.id\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_3, [\n                    _createElementVNode(\"div\", _hoisted_4, [\n                      _createElementVNode(\"div\", _hoisted_5, [\n                        _createElementVNode(\"div\", _hoisted_6, [\n                          _hoisted_7,\n                          _createElementVNode(\"div\", {\n                            class: _normalizeClass([\"fuda-label\", {\r\n                      blue: item.status == 0,\r\n                      green: item.status == 1,\r\n                      red: item.status == 2,\r\n                    }])\n                          }, [\n                            _createTextVNode(_toDisplayString(item.status == 0 ? \"未启用\" : item.status == 1 ? \"进行中\" : \"已结束\") + \" \", 1 /* TEXT */),\n                            (item.status == 1 && _ctx.countDown(item.bagDrawPrizeTimeLong) > 0)\n                              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, [\n                                  _createCommentVNode(\" {{leftTimeLabel}} \"),\n                                  _createVNode(_component_van_count_down, {\n                                    format: \"mm:ss\",\n                                    onFinish: _ctx.onFinish,\n                                    time: _ctx.countDown(item.bagDrawPrizeTimeLong),\n                                    style: {\"display\":\"inline-block\"}\n                                  }, null, 8 /* PROPS */, [\"onFinish\", \"time\"])\n                                ]))\n                              : _createCommentVNode(\"v-if\", true)\n                          ], 2 /* CLASS */)\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.goldCoin) + \"金币*\" + _toDisplayString(item.winPrizeQuantity) + \"个，计时\" + _toDisplayString(item.countDownLabel), 1 /* TEXT */),\n                        _createCommentVNode(\" <div\\r\\n                    class=\\\"fuda-label red bottom-line\\\"\\r\\n                    @click=\\\"showPopup(item)\\\"\\r\\n                    v-if=\\\"item.pushType == 0\\\"\\r\\n                  >\\r\\n                    奖项设置\\r\\n                  </div> \")\n                      ])\n                    ]),\n                    _createVNode(_component_van_button, {\n                      class: _normalizeClass([\"fsize13 plain\", {\r\n                color: item.status == 0,\r\n              }]),\n                      loading: item.id == _ctx.activeId,\n                      onClick: ($event: any) => (_ctx.start(item))\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.status == 0\r\n                  ? \"启用\"\r\n                  : item.status == 1\r\n                  ? \"查看参与名单\"\r\n                  : \"查看中奖名单\"), 1 /* TEXT */)\n                      ]),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"loading\", \"onClick\"])\n                  ])\n                ]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */))\n            }), 128 /* KEYED_FRAGMENT */)),\n            _createCommentVNode(\" <div style=\\\"height: 35px; background: #f5f5f5\\\"></div> \"),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.prizeList, (item) => {\n              return (_openBlock(), _createBlock(_component_van_cell, {\n                key: item.id\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_10, [\n                    _createElementVNode(\"div\", _hoisted_11, [\n                      _createElementVNode(\"div\", _hoisted_12, [\n                        _createElementVNode(\"div\", _hoisted_13, [\n                          _hoisted_14,\n                          _createElementVNode(\"div\", {\n                            class: _normalizeClass([\"fuda-label\", {\r\n                      blue: item.prizeSumSurplus == 0,\r\n                      green: item.prizeSumSurplus == 1,\r\n                      red: item.prizeSumSurplus == 2,\r\n                    }])\n                          }, _toDisplayString(item.activityState == 0\r\n                        ? \"未启用\"\r\n                        : item.activityState == 1\r\n                        ? \"进行中\"\r\n                        : item.activityState == 2\r\n                        ? \"已结束\"\r\n                        : \"已关闭\"), 3 /* TEXT, CLASS */)\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_15, [\n                          _createElementVNode(\"div\", _hoisted_16, \"奖品数量：\" + _toDisplayString(item.drawNumber) + \"个\", 1 /* TEXT */),\n                          _createElementVNode(\"div\", {\n                            class: \"fuda-label red bottom-line\",\n                            onClick: ($event: any) => (_ctx.showPopup(item.prizeList))\n                          }, \" 奖项设置 \", 8 /* PROPS */, _hoisted_17)\n                        ])\n                      ])\n                    ]),\n                    _createVNode(_component_van_button, {\n                      class: _normalizeClass([\"fsize13\", {\r\n                plain: item.prizeSumSurplus > 0,\r\n                color: item.prizeSumSurplus == 0,\r\n              }]),\n                      loading: item.id == _ctx.activeId,\n                      onClick: ($event: any) => (_ctx.start(item))\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.prizeSumSurplus == 0 ? \"启用\" : \"查看中奖名单\"), 1 /* TEXT */)\n                      ]),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"loading\", \"onClick\"])\n                  ])\n                ]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */))\n            }), 128 /* KEYED_FRAGMENT */))\n          ]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"loading\", \"finished\", \"onLoad\"])\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"onRefresh\"]),\n    _createVNode(_component_van_popup, {\n      show: _ctx.show,\n      \"onUpdate:show\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.show) = $event)),\n      closeable: \"\",\n      round: \"\",\n      style: { width: '90vw' }\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_18, [\n          _hoisted_19,\n          _hoisted_20,\n          _createElementVNode(\"div\", _hoisted_21, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.offerList, (stem) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: stem.key\n              }, [\n                _createElementVNode(\"div\", {\n                  style: {\"display\":\"flex\"},\n                  class: _normalizeClass([\"ofcolor1\", {\r\n                ofcolor0: stem.prizeType == 0,\r\n                ofcolor2: stem.prizeType == 2,\r\n                ofcolor1: stem.prizeType == 1,\r\n                ofcolor3: stem.prizeType == 3,\r\n              }])\n                }, [\n                  _createElementVNode(\"div\", _hoisted_22, _toDisplayString(stem.prizeType_dictText), 1 /* TEXT */),\n                  _createElementVNode(\"div\", _hoisted_23, _toDisplayString(stem.prizeSum), 1 /* TEXT */),\n                  _createElementVNode(\"div\", _hoisted_24, _toDisplayString(stem.prizeTitle), 1 /* TEXT */)\n                ], 2 /* CLASS */)\n              ]))\n            }), 128 /* KEYED_FRAGMENT */))\n          ])\n        ])\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"show\"])\n  ]))\n}","\r\nimport {\r\n  ref,\r\n  reactive,\r\n  defineComponent,\r\n  getCurrentInstance,\r\n  nextTick,\r\n  onMounted,\r\n  toRefs,\r\n} from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { get, post } from \"@/utils/request\";\r\nimport socket from \"@/utils/socket\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { Toast } from \"vant\";\r\nimport { userStore } from \"@/store/user\";\r\nimport { storeToRefs } from \"pinia\";\r\nexport default defineComponent({\r\n  name: \"turnplateManage\",\r\n  setup(props: any, context: any) {\r\n    const { appContext } = getCurrentInstance() as any;\r\n    const axios = appContext.config.globalProperties.$axios;\r\n    const store = userStore();\r\n    const { liveId } = storeToRefs(store);\r\n    const state = reactive({\r\n      luckyList: <any[]>[], //福袋列表\r\n      offerList: <any[]>[], //奖项列表\r\n      prizeList: <any[]>[], //幸运抽奖列表\r\n      activeId: ref(\"\"),\r\n      currentPage: ref(0),\r\n      sizePage: ref(10),\r\n      totalPage: ref(0),\r\n      show: false,\r\n      leftTime: ref(0),\r\n      leftTimeLabel: ref(\"\"),\r\n      liveId: ref(\"\"),\r\n    });\r\n    // state.liveId = \"e5f303d9-97ec-6bc0-2fd8-8107ad15fa85\";\r\n\r\n    state.liveId = liveId.value;\r\n    const showPopup = (item: any) => {\r\n      state.show = true;\r\n      getPrizeList(item);\r\n    };\r\n    const getPrizeList = (item: any) => {\r\n      console.log(\"奖项设置：\" + item);\r\n      state.offerList = [];\r\n      state.offerList = item;\r\n    };\r\n    const onClickLeft = () => history.back();\r\n\r\n    const loading = ref(false);\r\n    const finished = ref(false);\r\n    const refreshing = ref(false);\r\n\r\n    const router = useRouter();\r\n    //const route = useRoute()\r\n    const start = (item: any) => {\r\n      if (item.status == 0) {\r\n        state.activeId = item.id;\r\n        enableGoodBag(item.id, item.liveId);\r\n        // socketEnableBag(item.liveId,item.liveGoodBagId);\r\n      } else if (item.status == 2) {\r\n        router.push(\"/winUser/\" + item.id);\r\n      } else if (item.status == 1) {\r\n        router.push(\"/joinUser/\" + item.id);\r\n      }\r\n    };\r\n    const enableGoodBag = (id: String, vid: String) => {\r\n      let pdata = { goodBagId: id, liveId: vid };\r\n      console.log(\"启用福袋\" + JSON.stringify(pdata));\r\n      get(axios.defaults.baseURL + \"/jeecg-boot/goodBag/api/enableGoodBag\", pdata).then(\r\n        (res: any) => {\r\n          if (res.data.code == 200 || res.data.code == 500) {\r\n            setTimeout(() => {\r\n              state.activeId = \"\";\r\n              refreshing.value = true;\r\n              onRefresh();\r\n              Toast(res.data.message);\r\n            }, 500);\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    function loadPrize() {\r\n      let req = {\r\n        pageNo: state.currentPage,\r\n        pageSize: 10,\r\n        liveId: state.liveId,\r\n      };\r\n      get(\r\n        axios.defaults.baseURL + \"/jeecg-boot/LiveActivity/liveActivity/list\",\r\n        req\r\n      ).then((res: any) => {\r\n        if (res.data.code == 200 && res.data.result) {\r\n          let data = res.data.result;\r\n          console.log(\"prizeList\", data);\r\n          let records = data.records;\r\n          if (records.length > 0) {\r\n            for (let i = 0; i < records.length; i++) {\r\n              state.prizeList.push(records[i]);\r\n            }\r\n          }\r\n\r\n          console.log(\"当前页：\" + state.currentPage);\r\n          loading.value = false;\r\n          if (state.currentPage >= data.pages) {\r\n            finished.value = true;\r\n          }\r\n        } else {\r\n          finished.value = true;\r\n          loading.value = false;\r\n        }\r\n      });\r\n    }\r\n    function loadGoodBag() {\r\n      //  state.currentPage=1\r\n      let req = {\r\n        pageNo: state.currentPage,\r\n        pageSize: 10,\r\n        liveId: state.liveId,\r\n      };\r\n      //  /jeecg-boot/goodBag/api/ongoingGoodBag\r\n      get(axios.defaults.baseURL + \"/jeecg-boot/goodBag/api/goodBagList\", req).then(\r\n        (res: any) => {\r\n          if (res.data.code == 200 && res.data.result) {\r\n            let data = res.data.result;\r\n            console.log(\"luckyList\", data);\r\n            let records = data;\r\n            if (records.length > 0) {\r\n              for (let i = 0; i < records.length; i++) {\r\n                state.luckyList.push(records[i]);\r\n              }\r\n            }\r\n\r\n            console.log(\"当前页：\" + state.currentPage);\r\n            loading.value = false;\r\n            // if (state.currentPage >= data.pages) {\r\n            finished.value = true;\r\n            // }\r\n          } else {\r\n            finished.value = true;\r\n            loading.value = false;\r\n          }\r\n        }\r\n      );\r\n    }\r\n    const onLoad = () => {\r\n      if (refreshing.value) {\r\n        state.luckyList = [];\r\n        state.prizeList = [];\r\n        state.currentPage = 0;\r\n        refreshing.value = false;\r\n      }\r\n      state.currentPage++;\r\n      loadGoodBag();\r\n      //  loadPrize();\r\n      //  socketEnableBag(\r\n      //   \"1523497318079721473\",\r\n      //   \"1529729222772678658\"\r\n      // );\r\n    };\r\n    const onFinish = () => {\r\n      setTimeout(() => {\r\n        state.activeId = \"\";\r\n        refreshing.value = true;\r\n        onRefresh();\r\n      }, 200);\r\n    };\r\n    const onRefresh = () => {\r\n      finished.value = false;\r\n      loading.value = true;\r\n\r\n      onLoad();\r\n    };\r\n\r\n    //websocket 推送---\r\n    onMounted(async () => {\r\n      // socket.init(receiveMessage);\r\n    });\r\n    // 消息接收\r\n    async function receiveMessage(message: any) {\r\n      // const param = JSON.parse(Base64.decode(message.data));\r\n      const param = JSON.parse(message.data);\r\n      // 处理 赋值问题\r\n      const params = JSON.parse(JSON.stringify(param));\r\n      //  console.log('消息接收'+JSON.stringify(message.data))\r\n\r\n      interface Opt {\r\n        id: number;\r\n        liveId: string;\r\n        message: string;\r\n        countDownLabel: string;\r\n        countDownLong: number;\r\n        countDownString: string;\r\n        enableFlag: number;\r\n        goldCoin: number;\r\n        winPrizeQuantity: number;\r\n      }\r\n\r\n      const opt: Opt = {\r\n        id: param.id,\r\n        goldCoin: params.goldCoin,\r\n        winPrizeQuantity: param.winPrizeQuantity,\r\n        liveId: param.liveId,\r\n        message: param.message,\r\n        countDownString: param.countDownString,\r\n        countDownLong: param.countDownLong,\r\n        countDownLabel: param.countDownLabel,\r\n        enableFlag: param.enableFlag,\r\n      };\r\n      // if(params.pushType==1){\r\n      // let timestamp=Math.round(new Date().getTime());\r\n      // console.log(params.countDownLong+\"--当前时间：-\"+(1653823167055-timestamp))\r\n\r\n      await addTimeOut(params);\r\n      // }\r\n    }\r\n    function addTimeOut(opt: any) {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          addGoodBag(opt);\r\n          resolve(\"success\");\r\n        }, 500);\r\n      });\r\n    }\r\n    function addGoodBag(data: any) {\r\n      // if (state.luckyList.length >= 150) {\r\n      //   state.luckyList.splice(0, 50);\r\n      // }\r\n      // state.luckyList = [];\r\n      // data.enableFlag=1\r\n      // data.countDownString='10:00';\r\n      // data.countDownLong=60000;\r\n      // state.leftTime=data.countDownLong;\r\n      state.luckyList.push(data);\r\n      nextTick(() => {\r\n        finished.value = true;\r\n        loading.value = false;\r\n        //  console.log(data.liveGoodBagId);\r\n\r\n        // let timeINt=setInterval(()=>{\r\n        //       state.leftTime=state.leftTime - 1000\r\n        //       state.leftTimeLabel=countDown(state.leftTime/1000) ;\r\n        //       if(state.leftTime==0){\r\n        //              clearInterval(timeINt)\r\n        //       }\r\n        //    },1000)\r\n\r\n        //renderComment();\r\n      });\r\n    }\r\n    function addZero(i: Number) {\r\n      return i < 10 ? \"0\" + i : i + \"\";\r\n    }\r\n    function countDown(lt: any) {\r\n      // let m:any = lt / 60 % 60;\r\n      //  let s:any = lt % 60;\r\n      // return addZero(parseInt(m))+':'+addZero(parseInt(s));\r\n\r\n      let timestamp = Math.round(new Date().getTime());\r\n      let st = lt - timestamp;\r\n      console.log(new Date(lt).toLocaleString() + \"结束时间：\" + st);\r\n      if (st < 0) {\r\n        st = 0;\r\n      }\r\n      console.log(\"n结束时间：\" + st);\r\n      return st;\r\n    }\r\n    //队列添加消息\r\n\r\n    async function socketEnableBag(lId: string, bagId: string) {\r\n      interface Opt {\r\n        liveGoodBagId: string;\r\n        liveId: string;\r\n        pushType: string;\r\n\r\n        sendMessageType: string;\r\n      }\r\n      const opt: Opt = {\r\n        liveId: lId,\r\n        liveGoodBagId: bagId,\r\n        pushType: \"1\",\r\n        sendMessageType: \"1\",\r\n      };\r\n      await socket.send(opt);\r\n    }\r\n\r\n    //-------------\r\n\r\n    return {\r\n      ...toRefs(state),\r\n      enableGoodBag,\r\n      socketEnableBag,\r\n      onClickLeft,\r\n      onLoad,\r\n      loading,\r\n      finished,\r\n      refreshing,\r\n      onRefresh,\r\n      showPopup,\r\n      start,\r\n      router,\r\n      getPrizeList,\r\n      loadPrize,\r\n      loadGoodBag,\r\n      addGoodBag,\r\n      countDown,\r\n      addZero,\r\n      onFinish,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./TurnplateManage.vue?vue&type=template&id=6e58b550&scoped=true&ts=true\"\nimport script from \"./TurnplateManage.vue?vue&type=script&lang=ts\"\nexport * from \"./TurnplateManage.vue?vue&type=script&lang=ts\"\n\nimport \"./TurnplateManage.vue?vue&type=style&index=0&id=6e58b550&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\直播项目\\\\live\\\\frontEnd\\\\labor-live\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6e58b550\"]])\n\nexport default __exports__"],"names":["store","liveId","userId","socket","websocket","connectURL","value","socket_open","hearbeat_timer","hearbeat_interval","is_reconnect","reconnect_count","reconnect_current","reconnect_number","reconnect_timer","reconnect_interval","init","receiveMessage","window","WebSocket","onmessage","e","onclose","clearInterval","setTimeout","clearTimeout","reconnect","onopen","heartbeat","onerror","send","data","callback","readyState","OPEN","JSON","stringify","receive","message","params","parse","setInterval","sendDara","encryption_type","content","close","_withScopeId","n","_hoisted_1","class","_hoisted_2","_","style","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","key","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","name","setup","props","context","axios","config","globalProperties","$axios","user","state","luckyList","offerList","prizeList","activeId","currentPage","sizePage","totalPage","show","leftTime","leftTimeLabel","getPrizeList","item","console","log","loading","finished","refreshing","router","enableGoodBag","id","vid","pdata","goodBagId","defaults","baseURL","then","res","code","onRefresh","loadGoodBag","req","pageNo","pageSize","result","records","length","i","push","onLoad","addGoodBag","socketEnableBag","lId","bagId","opt","liveGoodBagId","pushType","sendMessageType","onClickLeft","history","back","showPopup","start","status","loadPrize","pages","countDown","lt","st","Math","round","Date","getTime","toLocaleString","addZero","onFinish","_ctx","_cache","$props","$setup","$data","$options","_component_van_nav_bar","_component_van_count_down","_component_van_button","_component_van_cell","_component_van_list","_component_van_pull_refresh","_component_van_popup","title","modelValue","$event","default","blue","green","red","bagDrawPrizeTimeLong","format","time","goldCoin","winPrizeQuantity","countDownLabel","color","onClick","prizeSumSurplus","activityState","drawNumber","plain","closeable","width","stem","ofcolor0","prizeType","ofcolor2","ofcolor1","ofcolor3","prizeType_dictText","prizeSum","prizeTitle"],"sourceRoot":""}